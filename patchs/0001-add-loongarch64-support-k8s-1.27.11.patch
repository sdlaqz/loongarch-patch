From f7d12bf3650545e78a6db485851e364624a3c910 Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Tue, 12 Mar 2024 22:45:59 -0400
Subject: [PATCH] add loongarch64 support

---
 build/build-image/cross/VERSION                 |  2 +-
 build/common.sh                                 | 17 ++++++++++++-----
 hack/lib/golang.sh                              |  3 +++
 hack/lib/util.sh                                |  5 ++++-
 hack/local-up-cluster.sh                        |  5 ++++-
 .../libcontainer/system/syscall_linux_64.go     |  4 ++--
 vendor/go.etcd.io/bbolt/bolt_loong64.go         |  9 +++++++++
 7 files changed, 35 insertions(+), 10 deletions(-)
 create mode 100644 vendor/go.etcd.io/bbolt/bolt_loong64.go

diff --git a/build/build-image/cross/VERSION b/build/build-image/cross/VERSION
index 9e725723..a0f9a4b4 100644
--- a/build/build-image/cross/VERSION
+++ b/build/build-image/cross/VERSION
@@ -1 +1 @@
-v1.27.0-go1.21.7-bullseye.0
+latest
diff --git a/build/common.sh b/build/common.sh
index df0a9d60..268db9be 100755
--- a/build/common.sh
+++ b/build/common.sh
@@ -41,8 +41,10 @@ readonly KUBE_BUILD_IMAGE_REPO=kube-build
 KUBE_BUILD_IMAGE_CROSS_TAG="$(cat "${KUBE_ROOT}/build/build-image/cross/VERSION")"
 readonly KUBE_BUILD_IMAGE_CROSS_TAG
 
-readonly KUBE_DOCKER_REGISTRY="${KUBE_DOCKER_REGISTRY:-registry.k8s.io}"
-KUBE_BASE_IMAGE_REGISTRY="${KUBE_BASE_IMAGE_REGISTRY:-registry.k8s.io/build-image}"
+#readonly KUBE_DOCKER_REGISTRY="${KUBE_DOCKER_REGISTRY:-registry.k8s.io}"
+#KUBE_BASE_IMAGE_REGISTRY="${KUBE_BASE_IMAGE_REGISTRY:-registry.k8s.io/build-image}"
+readonly KUBE_DOCKER_REGISTRY="${KUBE_DOCKER_REGISTRY:-cr.loongnix.cn/kubernetes}"
+readonly KUBE_BASE_IMAGE_REGISTRY="${KUBE_BASE_IMAGE_REGISTRY:-cr.loongnix.cn/k8s-build-image}"
 readonly KUBE_BASE_IMAGE_REGISTRY
 
 # This version number is used to cause everyone to rebuild their data containers
@@ -95,9 +97,12 @@ readonly KUBE_RSYNC_PORT="${KUBE_RSYNC_PORT:-}"
 readonly KUBE_CONTAINER_RSYNC_PORT=8730
 
 # These are the default versions (image tags) for their respective base images.
-readonly __default_distroless_iptables_version=v0.4.5
-readonly __default_go_runner_version=v2.3.1-go1.21.7-bullseye.0
-readonly __default_setcap_version=bullseye-v1.4.2
+readonly __default_distroless_iptables_version=latest
+#readonly __default_distroless_iptables_version=v0.4.5
+#readonly __default_go_runner_version=v2.3.1-go1.21.7-bullseye.0
+#readonly __default_setcap_version=bullseye-v1.4.2
+readonly __default_go_runner_version=latest
+readonly __default_setcap_version=latest
 
 # These are the base images for the Docker-wrapped binaries.
 readonly KUBE_GORUNNER_IMAGE="${KUBE_GORUNNER_IMAGE:-$KUBE_BASE_IMAGE_REGISTRY/go-runner:$__default_go_runner_version}"
@@ -119,6 +124,8 @@ readonly KUBE_BUILD_SETCAP_IMAGE="${KUBE_BUILD_SETCAP_IMAGE:-$KUBE_BASE_IMAGE_RE
 kube::build::get_docker_wrapped_binaries() {
   ### If you change any of these lists, please also update DOCKERIZED_BINARIES
   ### in build/BUILD. And kube::golang::server_image_targets
+    local debian_iptables_version=latest
+    local go_runner_version=latest
   local targets=(
     "kube-apiserver,${KUBE_APISERVER_BASE_IMAGE}"
     "kube-controller-manager,${KUBE_CONTROLLER_MANAGER_BASE_IMAGE}"
diff --git a/hack/lib/golang.sh b/hack/lib/golang.sh
index 9e7f37b0..6b71dcef 100755
--- a/hack/lib/golang.sh
+++ b/hack/lib/golang.sh
@@ -26,6 +26,7 @@ readonly KUBE_SUPPORTED_SERVER_PLATFORMS=(
   linux/arm64
   linux/s390x
   linux/ppc64le
+  linux/loong64
 )
 
 # The node platforms we build for
@@ -34,6 +35,7 @@ readonly KUBE_SUPPORTED_NODE_PLATFORMS=(
   linux/arm64
   linux/s390x
   linux/ppc64le
+  linux/loong64
   windows/amd64
 )
 
@@ -46,6 +48,7 @@ readonly KUBE_SUPPORTED_CLIENT_PLATFORMS=(
   linux/arm64
   linux/s390x
   linux/ppc64le
+  linux/loong64
   darwin/amd64
   darwin/arm64
   windows/amd64
diff --git a/hack/lib/util.sh b/hack/lib/util.sh
index a6bc6aa0..c3b4b4a2 100755
--- a/hack/lib/util.sh
+++ b/hack/lib/util.sh
@@ -185,8 +185,11 @@ kube::util::host_arch() {
     ppc64le*)
       host_arch=ppc64le
       ;;
+    loongarch64*)
+      host_arch=loong64
+      ;;
     *)
-      kube::log::error "Unsupported host arch. Must be x86_64, 386, arm, arm64, s390x or ppc64le."
+      kube::log::error "Unsupported host arch. Must be x86_64, 386, arm, arm64, s390x, loong64 or ppc64le."
       exit 1
       ;;
   esac
diff --git a/hack/local-up-cluster.sh b/hack/local-up-cluster.sh
index 09969f80..9843c92f 100755
--- a/hack/local-up-cluster.sh
+++ b/hack/local-up-cluster.sh
@@ -305,8 +305,11 @@ function detect_binary {
       ppc64le*)
         host_arch=ppc64le
         ;;
+      loongarch64*)
+        host_arch=loong64
+        ;;
       *)
-        echo "Unsupported host arch. Must be x86_64, 386, arm, arm64, s390x or ppc64le." >&2
+        echo "Unsupported host arch. Must be x86_64, 386, arm, arm64, s390x, loong64 or ppc64le." >&2
         exit 1
         ;;
     esac
diff --git a/vendor/github.com/opencontainers/runc/libcontainer/system/syscall_linux_64.go b/vendor/github.com/opencontainers/runc/libcontainer/system/syscall_linux_64.go
index 1ed0dba1..ccb9340d 100644
--- a/vendor/github.com/opencontainers/runc/libcontainer/system/syscall_linux_64.go
+++ b/vendor/github.com/opencontainers/runc/libcontainer/system/syscall_linux_64.go
@@ -1,6 +1,6 @@
-//go:build linux && (arm64 || amd64 || mips || mipsle || mips64 || mips64le || ppc || ppc64 || ppc64le || riscv64 || s390x)
+//go:build linux && (arm64 || amd64 || mips || mipsle || mips64 || mips64le || ppc || ppc64 || ppc64le || riscv64 || s390x || loong64)
 // +build linux
-// +build arm64 amd64 mips mipsle mips64 mips64le ppc ppc64 ppc64le riscv64 s390x
+// +build arm64 amd64 mips mipsle mips64 mips64le ppc ppc64 ppc64le riscv64 s390x loong64
 
 package system
 
diff --git a/vendor/go.etcd.io/bbolt/bolt_loong64.go b/vendor/go.etcd.io/bbolt/bolt_loong64.go
new file mode 100644
index 00000000..c5bb7cb8
--- /dev/null
+++ b/vendor/go.etcd.io/bbolt/bolt_loong64.go
@@ -0,0 +1,9 @@
+// +build loong64
+
+package bbolt
+
+// maxMapSize represents the largest mmap size supported by Bolt.
+const maxMapSize = 0xFFFFFFFFFFFF // 256TB
+
+// maxAllocSize is the size used when creating array pointers.
+const maxAllocSize = 0x7FFFFFFF
-- 
2.27.0

