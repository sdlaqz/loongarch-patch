From 4e913f2e61d73704228ae72bc80221d3b9b25c18 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E6=B2=88=E5=BE=97=E9=BE=99?= <delong.shen@loongson.cn>
Date: Tue, 30 May 2023 14:34:55 +0800
Subject: [PATCH] add loongarch support

---
 src/include/storage/s_lock.h | 39 ++++++++++++++++++++++++++++++++++++
 1 file changed, 39 insertions(+)

diff --git a/src/include/storage/s_lock.h b/src/include/storage/s_lock.h
index c9fa84c..88e3cb8 100644
--- a/src/include/storage/s_lock.h
+++ b/src/include/storage/s_lock.h
@@ -529,6 +529,45 @@ do \
 
 #endif /* __mips__ && !__sgi */
 
+#if defined(__loongarch__)   /* loongarch */
+#define HAS_TEST_AND_SET
+
+typedef unsigned int slock_t;
+
+#define TAS(lock) tas(lock)
+
+static __inline__ int
+tas(volatile slock_t *lock)
+{
+	register volatile slock_t *_l = lock;
+	register int _res;
+	register int _tmp;
+
+	__asm__ __volatile__(
+		"       ll.w    %0, %2      \n"
+		"       ori     %1, %0, 1   \n"
+		"       sc.w    %1, %2      \n"
+		"       xori    %1, %1, 1   \n"
+		"       or      %0, %0, %1  \n"
+		"       dbar    0           \n"
+:		"=&r" (_res), "=&r" (_tmp), "+R" (*_l)
+:		/* no inputs */
+:		"memory");
+	return _res;
+}
+
+#define S_UNLOCK(lock)	\
+do \
+{ \
+	__asm__ __volatile__( \
+		"  dbar  0 \n" \
+:		/* no outputs */ \
+:		/* no inputs */	\
+:		"memory"); \
+	*((volatile slock_t *) (lock)) = 0; \
+} while (0)
+
+#endif /* __loongarch__ */
 
 #if defined(__hppa) || defined(__hppa__)	/* HP PA-RISC */
 /*
-- 
2.39.2

